
Commands:
	- help() - show this help
	- cls() - clear screen
	- closew() - close all plot windows
	- exec(@filename, @arguments) - execute external application with arguments
	- print(@any) - print value
	- p(@any) - same as "print"
	- sleep(@milliseconds) - pause for specified time
	- save(@filename, [@values]) - write array values to file
	- append(@filename, [@values]) - append array values to file
	- load(@filename) : [@values] - read array values from file
	- loadtihex(@filename) : [@values] - read array of hex values from file
	- loadbin(@filename) : [@values] - read binary file
	- include(@filename) - include JS functions from the file into current context
	- i(@filename) - same as "include"
	- plot([@Y], @stepX, @initX) - plot graph of values in array Y using X axis which is set by step and origin
	  <pl>
	- plot2([@Y1], [@Y2], @stepX, @initX) - plot graphs of values in arrays Y1 and Y2 using X axis which is set by step and origin
	- plot2s([@Y1], [@Y2], @stepX, @initX) - plot graphs of values in arrays Y1 and Y2 using X axis which is set by step and origin in same Y scale
	- plot3([@Y1], [@Y2], [@Y3], @stepX, @initX) - plot graphs of values in arrays Y1, Y2 and Y3 using X axis which is set by step and origin
	- plotXY([@X], [@Y]) - plot graph of values in array Y using array X as X axis values
	- scatter([@X], [@Y]) - plot scatter graph of values in array Y using array X as X axis values
	- scattern([@X], [@Y], @Xname, @Yname, @plotname) - plot scatter graph of values in array Y using array X as X axis values, override axis and plot names
	- reset() - reset script engine
	- uint(@low, @high) : @dword - create double word from two words
	- portlist() : @description - create text description of available serial ports in the system
	- pp() - print list of available serial ports
	- anykey() : @flag - return true if any key has been pressed
	- readkey() : @string - wait for and return pressed key
	- readline() : @string - wait for and return input string
	- create(@typename) : @object - create .NET object using string type name
	- create1(@typename, @Arg1) : @object - create .NET object using string type name and argument
	- create2(@typename, @Arg1, @Arg2) : @object - create .NET object using string type name and 2 arguments
	- loadlib(@filename, @method) : @object - load method from .NET dll
	- quit() - quit from program

Predefined objects:
	- cfg : Configuration - provides access to configuration functions
	- dev : DeviceObject - provides access to device control function
	- tmc : TMCObject - provides access to TMC device control function
	- cin : TextReader - standard input stream
	- cout : TextWriter - standard output stream
	- cerr : TextWriter - standard error stream

Types:
	- Configuration - provides access to configuration functions 
		- LoadProfile(@filename) - load specified device profile
	- DeviceObject - provides access to device I/O functions
		- Connect(@port)
		  <co>
		- Connect(@port, @baudrate)
		  <co>
		- Disconnect()
		  <dco>
		- SendString(@string)
		  <ss>
		- SendStringWithReply(@string) : [@value]
		  <sswr>
		- GetNodeID() : @value
		- SetNodeID(@value)
		  <nid>
		- Write16Silent(@address, @data) - write register without printing exception
		- Write16(@address, @data)
		  <w>
		- Write16S(@address, @data)
		  <ws>
		- Write32(@address, @data)
		- Write32S(@address, @data)
		- Write16(@address1, @data1, @address2, @data2)
		- Write16S(@address1, @data1, @address2, @data2)
		- WriteFloat(@address, @data)
		  <wf>
		- Read16Silent(@address) : @value - read register without printing exception
		- Read16(@address) : @value
		  <r>
		- Read16S(@address) : @value
		  <rs>
		- Read32(@address) : @value
		- Read32S(@address) : @value
		- Read16(@address1, @address2) : [@value]
		- Read16S(@address1, @address2) : [@value]
		- ReadFloatSilent(@address) : @value - read register without printing exception
		- ReadFloat(@address) : @value
		  <rf>
		- ReadLimitFloatLow(@address) : @value
		  <rlfl>
		- ReadLimitFloatHigh(@address) : @value
		  <rlfh>
		- ReadArray16(@endpoint, @maxcount) : [@array]
		  <ra>
		- ReadArray16S(@endpoint, @maxcount) : [@array]
		  <ras>
		- ReadArray32(@endpoint, @maxcount) : [@array]
		  <rla>
		- ReadArray32S(@endpoint, @maxcount) : [@array]
		  <rlas>
		- WriteArray16(@endpoint, [@array])
		  <wa>
		- WriteArray16S(@endpoint, [@array])
		  <was>
		- *WriteArray32(@endpoint, [@array])
		- *WriteArray32S(@endpoint, [@array])
		- Call(@action)
		  <c>
		- ReadArrayFast16(@endpoint) : [@array]
		  <raf>
		- ReadArrayFast16S(@endpoint) : [@array]
		  <rafs>
		- ReadArrayFastFloat(@endpoint) : [@array]
		  <raff>
		- Dump(@filename, @start, @end)
		- Restore(@filename)
	- TMCObject - provides access to TMC device I/O functions
		- list() - list USB-TMC devices
		- co() - connect to the first USB-TMC device
		- dco() - disconnect device
		- q(@string) : [@value] - query data from the device
		- w(@string) - write command to device
		- r() : [@value] - read data from device